[{"W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\index.js":"1","W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\reportWebVitals.js":"2","W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\App.js":"3","W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\ViewNavegacion.jsx":"4","W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\ViewPedidos.jsx":"5","W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\ViewMenu.jsx":"6","W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\ViewEntregados.jsx":"7","W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\ViewPorEntregar.jsx":"8","W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\ViewOptions.jsx":"9","W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\DetailsOrder.jsx":"10","W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\BtnOptionsBebida.jsx":"11","W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\BtnOptionsComplementos.jsx":"12","W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\BtnOptionsComida.jsx":"13","W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\database.js":"14","W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\ModalPedido.jsx":"15","W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\ViewDetallePedido.jsx":"16"},{"size":566,"mtime":1611154484933,"results":"17","hashOfConfig":"18"},{"size":390,"mtime":1608743366953,"results":"19","hashOfConfig":"18"},{"size":9245,"mtime":1612313731264,"results":"20","hashOfConfig":"18"},{"size":1858,"mtime":1611638068255,"results":"21","hashOfConfig":"18"},{"size":2540,"mtime":1611294980888,"results":"22","hashOfConfig":"18"},{"size":1604,"mtime":1611296761690,"results":"23","hashOfConfig":"18"},{"size":2359,"mtime":1611330241627,"results":"24","hashOfConfig":"18"},{"size":2472,"mtime":1611302875352,"results":"25","hashOfConfig":"18"},{"size":3494,"mtime":1611187853478,"results":"26","hashOfConfig":"18"},{"size":5896,"mtime":1611297774517,"results":"27","hashOfConfig":"18"},{"size":2029,"mtime":1611072276112,"results":"28","hashOfConfig":"18"},{"size":1866,"mtime":1611072344642,"results":"29","hashOfConfig":"18"},{"size":2077,"mtime":1611091950703,"results":"30","hashOfConfig":"18"},{"size":571,"mtime":1611321422496,"results":"31","hashOfConfig":"18"},{"size":4251,"mtime":1612384980121,"results":"32","hashOfConfig":"18"},{"size":726,"mtime":1612313070251,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"hrjbpc",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\index.js",[],["69","70","71","72","73","74"],"W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\reportWebVitals.js",[],"W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\App.js",["75","76","77","78","79","80","81","82"],"/* eslint-disable max-len */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { Container } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\n// import firebase from 'firebase';\r\nimport db from './database';\r\n// import 'firebase/firestore';\r\nimport ViewNavegacion from './components/ViewNavegacion';\r\nimport ViewMenu from './components/ViewMenu';\r\nimport ViewPedidos from './components/ViewPedidos';\r\n\r\n// import ViewMain from './components/ViewMain';\r\n// // import logo from './logo.svg';\r\n// import './App.css';\r\nfunction App() {\r\n  // db del Menu Completo:\r\n  const [optionsMenu, setOptionsMenu] = useState([]);\r\n  useEffect(() => {\r\n    const getMenu = async () => {\r\n      try {\r\n        const data = await db.collection('menu').get();\r\n        // console.log(data.docs);\r\n        const arrayData = data.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n        // console.log(arrayData);\r\n        setOptionsMenu(arrayData);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    getMenu();\r\n  }, []);\r\n\r\n  // Traer lo almacenado en Local Storage\r\n  const itemsLocalStorage = JSON.parse(localStorage.getItem('items') || '[]');\r\n  // Items 'Detalle' del Pedido:\r\n  // idItem, DescripciÃ³n, cantidad, precio, total\r\n  const [items, setItems] = useState(itemsLocalStorage);\r\n  // Pedidos:\r\n  //  cliente, Mesa, Estado\r\n  const [cliente, setCliente] = useState('');\r\n  const [mesa, setMesa] = useState('');\r\n\r\n  // Persist Data Local Storage:\r\n  useEffect(() => {\r\n    localStorage.setItem('items', JSON.stringify(items));\r\n  }, [items]);\r\n\r\n  // Agregar Item:\r\n  const addItem = (idAdd, descripcionAdd, precioAdd) => {\r\n    if (items.length === 0) { // Se encuatra vacio:\r\n      setItems([{\r\n        idItem: items.length + 1,\r\n        idMenu: idAdd,\r\n        descripcion: descripcionAdd,\r\n        cantidad: 1,\r\n        precio: precioAdd,\r\n        total: precioAdd,\r\n      }]);\r\n    } else { // cuando existen datos.\r\n      const newItems = [...items];\r\n      const existItem = (newItems.filter((item) => item.idMenu === idAdd).length) > 0;\r\n      console.log(existItem);\r\n      if (existItem) { // Ya existe id registrado:\r\n        newItems.map((itemPedido, index) => {\r\n          if (itemPedido.idMenu === idAdd) { // Buscamos coincidencia:\r\n            const cantidadItem = (newItems[index].cantidad) + 1; // Aumentamos\r\n            const totalItem = cantidadItem * newItems[index].precio;\r\n            newItems[index] = {\r\n              idItem: newItems[index].idItem,\r\n              idMenu: idAdd,\r\n              descripcion: newItems[index].descripcion,\r\n              cantidad: cantidadItem,\r\n              precio: newItems[index].precio,\r\n              total: totalItem,\r\n            };\r\n          }\r\n          return newItems[index];\r\n        });\r\n      } else { // Si no existe id, agregamos:\r\n        newItems.push(\r\n          {\r\n            idItem: (items.length) + 1,\r\n            idMenu: idAdd,\r\n            descripcion: descripcionAdd,\r\n            cantidad: 1,\r\n            precio: precioAdd,\r\n            total: precioAdd,\r\n          },\r\n        );\r\n      }\r\n\r\n      setItems(newItems);\r\n    }\r\n  };\r\n\r\n  // Eliminar:\r\n  const deleteItem = (id) => {\r\n    const newItems = [...items];\r\n    const index = newItems.findIndex((item) => item.idItem === id); // Encontrar el index\r\n    newItems.splice(index, 1); // Eliminamos el Item con el valor del index\r\n    setItems(newItems); // Actualizamos datos\r\n  };\r\n\r\n  // Vaciar:\r\n  const emptyItems = () => {\r\n    // setItems([]);\r\n    const newItems = [...items];\r\n    newItems.splice(0, items.length); // Eliminamos todos los elementos\r\n    setItems(newItems); // Actualizamos datos\r\n  };\r\n\r\n  // Reduce Cantidad:\r\n  const reduceCantidad = (idAdd) => {\r\n    // console.log(idAdd);\r\n    const newItems = [...items];\r\n    const existItem = (newItems.filter((item) => item.idMenu === idAdd).length) > 0;\r\n    console.log(existItem);\r\n    if (existItem) { // Ya existe id registrado:\r\n      newItems.forEach((itemPedido, index) => {\r\n        if (itemPedido.idMenu === idAdd) { // Buscamos coincidencia:\r\n          const cantidadItem = (newItems[index].cantidad) - 1;\r\n          const totalItem = cantidadItem * newItems[index].precio;\r\n          newItems[index] = {\r\n            idItem: newItems[index].idItem,\r\n            idMenu: idAdd,\r\n            descripcion: newItems[index].descripcion,\r\n            cantidad: cantidadItem,\r\n            precio: newItems[index].precio,\r\n            total: totalItem,\r\n          };\r\n          // console.log(newItems[index].cantidad);\r\n          if (newItems[index].cantidad === 0) {\r\n            newItems.splice(index, 1); // Eliminamos el Item con el valor del index\r\n            // setItems(newItems); // Actualizamos datos\r\n          }\r\n        }\r\n      });\r\n    }\r\n    setItems(newItems);\r\n  };\r\n\r\n  const [pedidos, setPedidos] = useState([]);\r\n  // const [getPedidos, setGetpedidos] = useState([]);\r\n  // Funcion enviar:\r\n  const enviarItems = () => {\r\n    const itemsFirebase = [];\r\n    items.forEach((value) => {\r\n      const item = {\r\n        idItem: value.idItem,\r\n        idMenu: value.idMenu,\r\n        descripcion: value.descripcion,\r\n        cantidad: value.cantidad,\r\n        precio: value.precio,\r\n        total: value.total,\r\n      };\r\n      itemsFirebase.push(item);\r\n    });\r\n\r\n    db.collection('pedidos').get().then((querySnapshot) => {\r\n      console.log('TamaÃ±o:', querySnapshot.size);\r\n      console.log(typeof querySnapshot.size);\r\n      const nroPedido = (querySnapshot.size + 1).toString();\r\n\r\n      const newPedido = {\r\n        detalle: itemsFirebase,\r\n        total: items.reduce((prev, next) => prev + next.total, 0),\r\n        cliente,\r\n        mesa,\r\n        estado: 'Por Entregar',\r\n      };\r\n\r\n      db.collection('pedidos').doc(nroPedido).set(newPedido);\r\n\r\n      setPedidos([...pedidos, { ...newPedido, id: nroPedido }]); // Actualiza Datos.\r\n    });\r\n\r\n    Swal.fire(\r\n      'Perfecto',\r\n      'Pedido Enviado!',\r\n      'success',\r\n    );\r\n    emptyItems();\r\n  };\r\n\r\n  // Mostrar Pedidos:\r\n  // const [getPedidos, setGetpedidos] = useState([\r\n  //   // {\r\n  //   //   id: 1,\r\n  //   //   cliente: 'Juan',\r\n  //   //   detalle: [{\r\n  //   //     cantidad: 1,\r\n  //   //     descripcion: 'Hamburguesa Doble',\r\n  //   //     idItem: 1,\r\n  //   //     idMenu: 2,\r\n  //   //     precio: 15,\r\n  //   //     total: 15,\r\n  //   //   }],\r\n  //   //   mesa: '2',\r\n  //   //   total: 15,\r\n  //   //   estado: 'Por Entregar',\r\n  //   // },\r\n  //   // {\r\n  //   //   id: 2,\r\n  //   //   cliente: 'Sofia',\r\n  //   //   detalle: [{\r\n  //   //     cantidad: 1,\r\n  //   //     descripcion: 'Hamburguesa Simple',\r\n  //   //     idItem: 1,\r\n  //   //     idMenu: 1,\r\n  //   //     precio: 10,\r\n  //   //     total: 10,\r\n  //   //   }],\r\n  //   //   mesa: '3',\r\n  //   //   total: 10,\r\n  //   //   estado: 'Por Entregar',\r\n  //   // },\r\n  // ]);\r\n  useEffect(() => {\r\n    const getPedido = async () => {\r\n      try {\r\n        const data = await db.collection('pedidos').get();\r\n        // console.log(data.docs);\r\n        const arrayData = data.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n        console.log(arrayData);\r\n        setPedidos(arrayData);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getPedido();\r\n  }, []);\r\n\r\n  const updatePedido = (idPedido) => {\r\n    console.log(idPedido);\r\n\r\n    const newPedido = {\r\n      estado: 'Entregado',\r\n    };\r\n\r\n    db.collection('pedidos').doc(idPedido).update(newPedido);\r\n\r\n    setPedidos([{ ...newPedido }]); // Actualiza Datos.\r\n    Swal.fire(\r\n      'Perfecto',\r\n      'Pedido Entregado!',\r\n      'success',\r\n    );\r\n    emptyItems();\r\n  };\r\n  return (\r\n    <Container fluid id=\"containerRoot\">\r\n      <BrowserRouter>\r\n        <ViewNavegacion />\r\n        <Switch>\r\n          <Route path=\"#\" exact>\r\n            <ViewMenu\r\n              optionsMenu={optionsMenu}\r\n              items={items}\r\n              setItems={setItems}\r\n              addItem={addItem}\r\n              deleteItem={deleteItem}\r\n              emptyItems={emptyItems}\r\n              reduceCantidad={reduceCantidad}\r\n              enviarItems={enviarItems}\r\n              cliente={cliente}\r\n              setCliente={setCliente}\r\n              mesa={mesa}\r\n              setMesa={setMesa}\r\n            />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <ViewMenu\r\n              optionsMenu={optionsMenu}\r\n              items={items}\r\n              setItems={setItems}\r\n              addItem={addItem}\r\n              deleteItem={deleteItem}\r\n              emptyItems={emptyItems}\r\n              reduceCantidad={reduceCantidad}\r\n              enviarItems={enviarItems}\r\n              cliente={cliente}\r\n              setCliente={setCliente}\r\n              mesa={mesa}\r\n              setMesa={setMesa}\r\n            />\r\n          </Route>\r\n          <Route path=\"/pedidos\">\r\n            <ViewPedidos\r\n              updatePedido={updatePedido}\r\n              pedidos={pedidos}\r\n              setPedidos={setPedidos}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\ViewNavegacion.jsx",[],"W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\ViewPedidos.jsx",[],"W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\ViewMenu.jsx",[],"W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\ViewEntregados.jsx",[],"W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\ViewPorEntregar.jsx",[],"W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\ViewOptions.jsx",[],"W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\DetailsOrder.jsx",["83"],"/* eslint-disable max-len */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle, faMinusCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst DetailsOrder = ({\r\n  items,\r\n  addItem,\r\n  setItems,\r\n  deleteItem,\r\n  emptyItems,\r\n  reduceCantidad,\r\n  elevateCantidad,\r\n  enviarItems,\r\n  cliente,\r\n  setCliente,\r\n  mesa,\r\n  setMesa,\r\n}) => {\r\n  const sumaTotal = () => {\r\n    let total = 0;\r\n    items.forEach((value) => {\r\n      total += value.total;\r\n    });\r\n    return total;\r\n  };\r\n  console.log(sumaTotal());\r\n  return (\r\n    <>\r\n      <section id=\"detailsOrder\" className=\"padded\">\r\n        <div className=\"container\">\r\n          <h2>Resumen de Pedido</h2>\r\n        </div>\r\n      </section>\r\n\r\n      <section id=\"formOrder\" className=\"padded\">\r\n        <div className=\"container h-100\">\r\n          <div className=\"d-flex h-100\">\r\n            <div className=\"align-self-center mx-auto\">\r\n              <Form Fluid>\r\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                  {/* <Form.Label>Cliente</Form.Label> */}\r\n                  <Form.Control type=\"text\" placeholder=\"Cliente\" onChange={(e) => setCliente(e.target.value)} value={cliente} />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                  <Form.Label>\r\n                    Mesa:\r\n                  </Form.Label>\r\n                  <Form.Control as=\"select\" onChange={(e) => setMesa(e.target.value)} value={mesa}>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"6\">6</option>\r\n                    <option value=\"7\">7</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"9\">9</option>\r\n                    <option value=\"10\">10</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section id=\"listOrder\" className=\"padded\">\r\n        <div className=\"container\">\r\n          <Table responsive=\"md\" className=\"table-striped table-bordered table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>Cantidad</th>\r\n                <th>DescripciÃ³n</th>\r\n                <th>Precio</th>\r\n                <th>Total</th>\r\n                <th>\r\n                  {' '}\r\n                  {' '}\r\n                  {' '}\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n              items.length > 0\r\n                ? items.map((item) => (\r\n                  <tr key={item.idItem}>\r\n                    <th className=\"btn-cantidad\">\r\n                      {' '}\r\n                      <FontAwesomeIcon icon={faPlusCircle} onClick={() => addItem(item.idMenu, item.descripcion, item.precio)} />\r\n                      {' '}\r\n                      {item.cantidad}\r\n                      {' '}\r\n                      {' '}\r\n                      <FontAwesomeIcon icon={faMinusCircle} onClick={() => reduceCantidad(item.idMenu)} />\r\n                    </th>\r\n                    <th>\r\n                      {' '}\r\n                      {item.descripcion}\r\n                      {' '}\r\n                    </th>\r\n                    <th>\r\n                      {' S/.'}\r\n                      {item.precio}\r\n                    </th>\r\n                    <th>\r\n                      {' S/.'}\r\n                      {item.total}\r\n                    </th>\r\n                    <th>\r\n                      <FontAwesomeIcon icon={faTimesCircle} className=\"btn-cantidad\" onClick={() => deleteItem(item.idItem)} />\r\n                    </th>\r\n                  </tr>\r\n                ))\r\n\r\n                : (\r\n                  <tr>\r\n                    <th colSpan=\"5\"> Aun no hay productos </th>\r\n                  </tr>\r\n                )\r\n}\r\n            </tbody>\r\n            <tfoot>\r\n              {' '}\r\n              <tr>\r\n                <th> </th>\r\n                <th> </th>\r\n                <th>Total:</th>\r\n                <th colSpan=\"2\">\r\n                  {'S/. '}\r\n                  {sumaTotal()}\r\n                </th>\r\n              </tr>\r\n            </tfoot>\r\n          </Table>\r\n        </div>\r\n      </section>\r\n\r\n      <section id=\"btnOrderMenu\" className=\"padded\">\r\n        <div className=\"container  h-100\">\r\n          <div className=\"d-flex h-100\">\r\n            <div className=\"align-self-center mx-auto\">\r\n              <Button variant=\"primary\" size=\"lg\" onClick={() => emptyItems()}>\r\n                Vaciar\r\n              </Button>\r\n              <Button variant=\"secondary\" size=\"lg\" onClick={() => enviarItems()}>\r\n                Enviar\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nDetailsOrder.propTypes = {\r\n  reduceCantidad: PropTypes.node.isRequired,\r\n  elevateCantidad: PropTypes.node.isRequired,\r\n  items: PropTypes.node.isRequired,\r\n  addItem: PropTypes.node.isRequired,\r\n  setItems: PropTypes.node.isRequired,\r\n  deleteItem: PropTypes.node.isRequired,\r\n  emptyItems: PropTypes.node.isRequired,\r\n  enviarItems: PropTypes.node.isRequired,\r\n  cliente: PropTypes.node.isRequired,\r\n  setCliente: PropTypes.node.isRequired,\r\n  mesa: PropTypes.node.isRequired,\r\n  setMesa: PropTypes.node.isRequired,\r\n};\r\nexport default DetailsOrder;\r\n","W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\BtnOptionsBebida.jsx",[],"W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\BtnOptionsComplementos.jsx",[],"W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\BtnOptionsComida.jsx",[],"W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\database.js",[],"W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\ModalPedido.jsx",[],"W:\\Proyectos_Github\\LIM013-fe-burger-queen\\src\\components\\ViewDetallePedido.jsx",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":28,"column":9,"nodeType":"98","messageId":"99","endLine":28,"endColumn":20},{"ruleId":"96","severity":1,"message":"97","line":64,"column":7,"nodeType":"98","messageId":"99","endLine":64,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":119,"column":5,"nodeType":"98","messageId":"99","endLine":119,"endColumn":16},{"ruleId":"96","severity":1,"message":"97","line":162,"column":7,"nodeType":"98","messageId":"99","endLine":162,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":163,"column":7,"nodeType":"98","messageId":"99","endLine":163,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":226,"column":9,"nodeType":"98","messageId":"99","endLine":226,"endColumn":20},{"ruleId":"96","severity":1,"message":"97","line":229,"column":9,"nodeType":"98","messageId":"99","endLine":229,"endColumn":20},{"ruleId":"96","severity":1,"message":"97","line":236,"column":5,"nodeType":"98","messageId":"99","endLine":236,"endColumn":16},{"ruleId":"96","severity":1,"message":"97","line":33,"column":3,"nodeType":"98","messageId":"99","endLine":33,"endColumn":14},"lines-around-directive",["100"],"no-spaced-func",["101"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements","func-call-spacing"]